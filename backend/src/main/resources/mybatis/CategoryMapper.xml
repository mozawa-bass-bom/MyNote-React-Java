<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mynote.app.domain.mapper.CategoryMapper">

  <!-- ========== ResultMap ========== -->
  <resultMap id="CategoryMap" type="com.mynote.app.domain.entity.Category">
    <id     property="id"        column="id"/>
    <result property="userId"    column="user_id"/>
    <result property="name"      column="name"/>
    <result property="prompt1"   column="prompt_1"/>
    <result property="prompt2"   column="prompt_2"/>
    <result property="createdAt" column="created_at"/>
    <result property="updatedAt" column="updated_at"/>
  </resultMap>

  <!-- ========== INSERT ========== -->
  <insert id="insert"
          parameterType="com.mynote.app.domain.entity.Category"
          useGeneratedKeys="true" keyProperty="id">
    INSERT INTO categories (user_id, name, prompt_1, prompt_2, created_at, updated_at)
    VALUES (#{userId}, #{name}, #{prompt1}, #{prompt2}, NOW(), NOW())
  </insert>

  <!-- ========== SELECT ========== -->

  <!-- ユーザーIDから全件取得 -->
  <select id="findByUserId" parameterType="long" resultMap="CategoryMap">
    SELECT id, user_id, name, prompt_1, prompt_2, created_at, updated_at
      FROM categories
     WHERE user_id = #{userId}
     ORDER BY created_at ASC
  </select>

  <!-- ナビ生成用（DTOのフィールド名に合わせてエイリアス付与） -->
  <select id="selectNavByUserId"
          parameterType="long"
          resultType="com.mynote.app.api.dto.nav.CategoryNavDto">
    SELECT
      c.id                  AS id,
      c.user_id             AS userId,
      c.name                AS name,
      COALESCE(COUNT(n.id), 0) AS noteCount
    FROM categories c
    LEFT JOIN notes n
      ON n.category_id = c.id
     AND n.user_id     = c.user_id
    WHERE c.user_id = #{userId}
    GROUP BY c.id, c.user_id, c.name
    ORDER BY c.created_at ASC
  </select>

  <!-- カテゴリ取得 -->
  <select id="findById" parameterType="long" resultMap="CategoryMap">
    SELECT id, user_id, name, prompt_1, prompt_2, created_at, updated_at
      FROM categories
     WHERE id = #{id}
  </select>

  <!-- ユーザー毎カテゴリ数 -->
  <select id="countCategorysByUserId" parameterType="long" resultType="int">
    SELECT COUNT(*) FROM categories WHERE user_id = #{userId}
  </select>

  <!-- ========== UPDATE ========== -->
  <update id="updateName">
    UPDATE categories
       SET name = #{name},
           updated_at = NOW()
     WHERE id = #{id}
  </update>

  <update id="updatePrompts">
    UPDATE categories
       SET prompt_1 = #{prompt1},
           prompt_2 = #{prompt2},
           updated_at = NOW()
     WHERE id = #{id}
  </update>

  <!-- ========== DELETE ========== -->

  <!-- 所有者チェックあり（ユーザー用APIで使用） -->
  <delete id="deleteByCategoryIdAndUser">
    DELETE FROM categories
     WHERE id = #{id}
       AND user_id = #{userId}
  </delete>

  <!-- ユーザー配下を一括削除（退会・管理操作など） -->
  <delete id="deleteAllByUser" parameterType="long">
    DELETE FROM categories WHERE user_id = #{userId}
  </delete>

  <!-- IDのみ（所有者チェックなし・管理者向け） -->
  <delete id="deleteByCategoryId" parameterType="long">
    DELETE FROM categories WHERE id = #{id}
  </delete>

</mapper>
