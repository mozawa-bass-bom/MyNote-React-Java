<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mynote.app.domain.mapper.PasswordResetTokenMapper">

  <resultMap id="TokenMap" type="com.mynote.app.domain.entity.PasswordResetToken">
    <id     property="id"        column="id"/>
    <result property="userId"    column="user_id"/>
    <result property="tokenHash" column="token_hash"/>
    <result property="issuedAt"  column="issued_at"/>
    <result property="expiresAt" column="expires_at"/>
    <result property="usedAt"    column="used_at"/>
    <result property="requestIp" column="request_ip"/>
    <result property="userAgent" column="user_agent"/>
  </resultMap>

  <insert id="insert" parameterType="com.mynote.app.domain.entity.PasswordResetToken" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO password_reset_tokens
      (user_id, token_hash, issued_at, expires_at, used_at, request_ip, user_agent)
    VALUES
      (#{userId}, #{tokenHash}, #{issuedAt}, #{expiresAt}, #{usedAt}, #{requestIp}, #{userAgent})
  </insert>

  <update id="invalidateActiveByUser">
    UPDATE password_reset_tokens
       SET used_at = #{now}
     WHERE user_id = #{userId}
       AND used_at IS NULL
       AND expires_at &gt; #{now}
  </update>

  <select id="findActiveByHash" resultMap="TokenMap">
    SELECT id, user_id, token_hash, issued_at, expires_at, used_at, request_ip, user_agent
      FROM password_reset_tokens
     WHERE token_hash = #{hash}
       AND used_at IS NULL
       AND expires_at &gt; #{now}
     ORDER BY id DESC
     LIMIT 1
  </select>

  <update id="markUsed">
    UPDATE password_reset_tokens
       SET used_at = #{now}
     WHERE id = #{id}
       AND used_at IS NULL
  </update>

  <delete id="purgeExpired">
    DELETE FROM password_reset_tokens
     WHERE used_at IS NOT NULL
        OR expires_at &lt;= #{now}
  </delete>

</mapper>
